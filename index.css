/* Default values */
:root{
    --def-transition-duration: .3s;
}
html{
    font-size: 16px;
    font-family: 'Figtree', sans-serif;
    line-height: 1.5;
}
img{
    display: block;
}
#hero{
    /* viewport height. It works like percentage. 60vh means 60% of screen*/
    height:60vh; 
    color:white;
    /* Adjusting position from where it normally appears */
    position: relative; 
}
/* This makes sure that the background always exists before anything else */
#hero::before{
    content:'';
    position:absolute;
    inset:0;
    background: rgba(15, 21, 37, .8);
    z-index: -1;
}

.container{
    /* 80% of the parents' width */
    width:80%;
    /* 0 is for top and bottom */
    /* auto is for left and right */
    margin: 0 auto;
    /* 100% of the entire hero */
    height:100%;
    /* relative of root element */
    padding: 4rem 0;
    display:flex;
    /* Each separate element goes down in a column */
    flex-direction: column;
    /* Put distance between each separate element */
    justify-content: space-between;
    /* Starts on the left side of the container */
    align-items: flex-start;
}

header{
    display: flex;
    justify-content: space-between;
    /* only works on flex box/grid */
    align-items: center;
    width: 100%;
}
/* Navigation bar */
nav ul{
    list-style: none;
    padding: 0;
    margin: 0;
    display:flex;
    gap:3rem;
}

nav ul a{
    text-decoration: none;
    color:white;
    display: inline-block;
    padding: 1.5rem 0;
}

nav ul a:hover{
    text-decoration:none;
    color:rgba(255,255,255,0.6)
}

.has_external_links{
    position: relative;
    display:flex;
    gap:.5rem;
    align-items: flex-end;
    justify-content: flex-start;
    height: 100%;
    /* top:2.95px; */
}

.has_external_links::after{
    content:url("../Icons/link.svg");
    position:relative;
    opacity: 0;
    /* Changing where the icon is
    height: 25px; */
    top:-50px;
}

.has_external_links:hover::after{
    opacity: 1;
    top:6px;
}

ul li a::after {
    content:url("../Icons/downward_arrow.svg");
    /* transform: translate3d(-100rem, -100rem,-100rem ) rotate(30deg); */
    position:relative;
    top:-50px;
    opacity: 0;
}

ul li a:hover::after{
    filter: invert(93%) sepia(94%) saturate(0%) hue-rotate(248deg) brightness(106%) contrast(106%);
    transition-delay: 0.2s;
    top:5px;
    opacity: 1;
}

.container h1{
    position: relative;
    font-size: 3em;
    top:-125px;
}


/* Video */
#hero .container video{
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -2;
}

/* Product showcase section */
#product-showcase{
    margin:50px;
    background-color: white;
    padding:50px;
}

#product-showcase header{
    height:100%;
    position: relative;
    display:block;
}

#product-showcase h1,
#product-showcase p{
    font-family: "Open Sans";
}

h3,
.price{
    font-family: 'Playfair Display', serif;
    margin:0;
}
h3{
    font-size: 2.1875rem;
    font-weight:400;
    line-height: 120%;
}
.price{
    font-variant-numeric: lining-nums proportional-nums;
    line-height: 120%;
    font-size: 1.5625rem;
}
header p{
    font-size: 1.125rem;
}

p.small{
    color:#E54949;
    font-size: 0.8125rem;
    font-weight: 700;
    text-transform: uppercase;
}

figure,
figure p.small {
    color: #fff;
}

figure h3 + p {
    font-size: 0.8125rem;
}

figure footer p.small {
    font-weight: 400;
    margin-bottom: 0;
}

.gallery{
    display:grid;
    list-style-type: none;
    padding:0;
    margin:0;
    /* Figure this out later */
    grid-gap: 2rem;
    grid-template-columns: repeat(auto-fit, minmax(20rem,1fr));
    grid-auto-rows: 40rem;
    grid-auto-flow: dense;
}

figure{
    margin:0;
    width: 100%;
    height:100%;
    position: relative;
    overflow: hidden;
}

.gallery img{
    width: 100%;
    height:100%;
    display: block;
    object-fit:cover;
}

figcaption{
    position: absolute;
    inset: 0;
    pointer-events: none;
    padding:4rem 2.5rem;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    gap: 2rem;
    z-index: 1;
}

figcaption main{
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    gap: 2rem;
}

figure p{
    margin: 0;
}


/* Since figcaption's z-index is 1, this is used to set the background image */
figcaption::before{
    content: ' ';
    position: absolute;
    inset: 0; /* Makes the pseudo element full width and height */
    /* Top bottom */
    background: linear-gradient(180deg, rgba(21, 22, 24, 0.24) 0%, #151618 100%);
    opacity: 0;
    z-index: -1;
    transition-property: opacity;
}

figure:hover figcaption::before{
    opacity: 1;
}

figure:hover img{
    transform: scale(1);
}

figure img{
    transform: scale(1.2);
    transition-property: transform;
}

figure main{
    transform: translate(0, -6rem);
    transition-property: transform,opacity;
    opacity: 0;
}

figure footer{
    display: flex;
    justify-content: space-between;
    align-items: center;
    transform: translate(0, 6rem);
    transition-property: transform, opacity;
    opacity: 0;
}

figure:hover footer,
figure:hover main{
    opacity: 1;
    transform: translate(0px, 0rem);
}

figure footer img{
    width: auto;
    transform: translate(-2rem, 0) rotate(360deg);
    opacity:0;
}
figure:hover footer img{
    transform: translate(0,0) rotate(0);
    opacity:1;
    transition-property: transform,opacity;
    transition-delay: 0.3s;
}

/* Handles transitions for navigation*/
nav ul a,
ul li a::after,
.has_external_links::after{
    transition-duration: var(--def-transition-duration);
    transition-property: opacity,color,top,filter;
}

/* Handles transition for gallery */
figcaption::before,
figure main,
figure footer,
figure img{
    transition-duration: var(--def-transition-duration);
    transition-timing-function: ease-in-out;
}
